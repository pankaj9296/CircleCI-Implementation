machine:
  environment: 
    ENVIRONMENT: development 
    CIRCLE_ENV: test
    DATABASE1_HOST: localhost
    DATABASE1_NAME: circle_test
    DATABASE1_USER: ubuntu
    DATABASE1_PASS: 
    NGROK_TOKEN: R5uVC1ye65hKoHHyZWLe_W6faFsUrkpKKuzWzQ1zj
    GHOST_API_KEY: fbef579153262df7ecf4bfaab92f87ad3d563265
    GHOST_SUITE_ID: 58ec6458c0b8a24d292f0e74
  hosts:
    circlebuild.roomsy.com: 127.0.0.1
dependencies:
  post:
    - sudo cp ~/test/circle_build_virtual_host.conf /etc/apache2/sites-available/circle_build_virtual_host.conf
    - sudo a2ensite circle_build_virtual_host.conf
    - sudo cp ~/test/fqdn.conf /etc/apache2/conf-available
    - sudo a2enconf fqdn
    - sudo apt-get -y update && sudo apt-get install -y libapache2-mod-php5
    - sudo service apache2 restart
    
machine:
  php:
    version: 5.6.17
  environment: 
    ENVIRONMENT: development 
    CIRCLE_ENV: test
    DATABASE1_HOST: 13.64.68.222
    DATABASE1_NAME: inngrid
    DATABASE1_USER: root
    DATABASE1_PASS: 1moI8bOrsNnthz
    NGROK_TOKEN: R5uVC1ye65hKoHHyZWLe_W6faFsUrkpKKuzWzQ1zj
    GHOST_API_KEY: fbef579153262df7ecf4bfaab92f87ad3d563265
    GHOST_SUITE_ID: 58ec6458c0b8a24d292f0e74
    APACHE_RUN_USER: ubuntu
    APACHE_RUN_GROUP: ubuntu
  hosts:
    circlebuild.roomsy.com: 127.0.0.1
dependencies:
  pre:
    # Install php modules
    - sudo a2enmod filter;
    - sudo a2enmod headers;
    - sudo a2enmod proxy;
    - sudo a2enmod proxy_http;
    - sudo a2enmod rewrite;
    - sudo sh -c "echo 'LoadModule php5_module /opt/circleci/php/$(phpenv global)/usr/lib/apache2/modules/libphp5.so' > /etc/apache2/mods-available/php5.load";
  post:
    - sudo cp ~/innGrid/circle_build_virtual_host.conf /etc/apache2/sites-available/circle_build_virtual_host.conf
    - sudo a2ensite circle_build_virtual_host.conf
    - sudo cp ~/innGrid/fqdn.conf /etc/apache2/conf-available
    - sudo a2enconf fqdn
    - sudo apt-get -y update && sudo apt-get install -y libapache2-mod-php5
    - sudo service apache2 restart
  override:
    - composer install --no-interaction
test:
  post:
    # Download ngrok and open tunnel to our application
    - wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
    - unzip ngrok-stable-linux-amd64.zip
    - chmod +x ngrok
    - ./ngrok authtoken $NGROK_TOKEN
    - ./ngrok http -host-header=circlebuild.roomsy.com 80:
        background: true
    # Download json parser for determining ngrok tunnel
    - wget http://stedolan.github.io/jq/download/linux64/jq
    - chmod +x jq
    # Execute Ghost Inspector tests using the ngrok tunnel
    - curl "https://api.ghostinspector.com/v1/suites/$GHOST_SUITE_ID/execute/?apiKey=$GHOST_API_KEY&startUrl=$(curl 'http://localhost:4040/api/tunnels' | ./jq -r '.tunnels[1].public_url')" > ghostinspector.json
    # Exit with a fail status if any tests have failed
    - if [ $(grep -c '"passing":false' ghostinspector.json) -ne 0 ]; then exit 1; fi
